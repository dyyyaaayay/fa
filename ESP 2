#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int** Matrix(int size) {
    int** matrix = malloc(size * sizeof(int*));

    for (int i = 0; i < size; i++) {
        matrix[i] = calloc(size, sizeof(int));
        matrix[i][i] = 1;
    }
    
    return matrix;
}

int E8(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = i + 1; j < size; j++) {
            if (arr[i] == arr[j]) {
                return 1; } } }
    
    return 0;
}

void recursion(int n) {
    if (n == 0) {
        return 0;
}
recursion(n - 1);
printf("%d ", n);
}

int count (int arr[], int size) {
    int count = 0;
    
    for (int i = 1; i < size; i++) {
        if (arr[i] == arr[i-1]) {
            count++;
        }
    }
    return count;
}

int Max10 (int arr[], int size) {
    int max = 0;
    
    for (int i = 1; i < size; i++) {
        if (abs(arr[i]) > abs(arr[max])) {
            max = i;
        }
    }
    return max;
}

void Sign (int arr[], int size) {
    int max = Max10(arr, size);
    
    arr[max] = -arr[max];
}

void e11(int arr1[], int size1, int arr2[], int size2, int result[], int size3) {
    int i = 0, j = 0, k = 0;
    
    while (i < size1 && j < size2) {
        if (arr1[i] <= arr2[j]) {
            result[k++] = arr1[i++];
        } else {
            result[k++] = arr2[j++];} }
    
    while (i < size1) {
        result[k++] = arr1[i++];}
    
    while (j < size2) {
        result[k++] = arr2[j++]; }
}


void Sort(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        int min = i;
        for (int j = i + 1; j < size; j++) {
            if (arr[j] < arr[min]) {
                min = j;}}
        
        int temp = arr[min];
        arr[min] = arr[i];
        arr[i] = temp;
    }
}

double equation(double x) {
    return cos(pow(x, 5)) + pow(x, 4) - 345.3 * x - 23;}

double solve(double a, double b, double precision) {
    double c = (a + b) / 2;
    
    if (fabs(equation(c)) < precision) {
        return c; }
    
    if (equation(a) * equation(c) < 0) {
        return solve(a, c, precision);
    } else {
        return solve(c, b, precision);
    }
}


int main() {
/*  //№1
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int** Matrixn1 = Matrix(size);

    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            printf("%d ", Matrixn1[i][j]);
        }
        printf("\n");
    }

    for (int i = 0; i < size; i++) {
        free(Matrixn1[i]);
    }
    free(Matrixn1);

    return 0;*/

/*//№4
    int n;
    printf("N: ");
    scanf("%d", &n);
    recursion(n);
    return 0;*/

 /*//№6 
    double a = 0;
    double b = 10;
    double precision = 0.001;
    
    double answer = solve(a, b, precision);
    
    printf("Answer:%.5f\n", answer);
    
    return 0;*/

/*//№8
   int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]); }
    
    if (E8(arr, size)) {
        printf("Элементы повторяются");
    } else {
        printf("Элементы не повторяются");
    }
    
    return 0;*/

/* //№9    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    
    int answer = count(arr, size);
    
    printf("Count: %d", answer);
    
    return 0; */
    
/*//№10  
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]); }
    
    Sign(arr, size);
    
    printf("New arr: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]); }
    return 0;*/
    
/* //№11  
    int size1, size2;
    printf("Size1: ");
    scanf("%d", &size1);
    
    int arr1[size1];
    printf("Arr1: ");
    for (int i = 0; i < size1; i++) {
        scanf("%d", &arr1[i]);}
    
    printf("Size2: ");
    scanf("%d", &size2);
    
    int arr2[size2];
    printf("Arr2: ");
    for (int i = 0; i < size2; i++) {
        scanf("%d", &arr2[i]);}
    
    int size3 = size1 + size2;
    int arr3[size3];
    
    e11(arr1, size1, arr2, size2, arr3, size3);
    
    printf("Res: ");
    for (int i = 0; i < size3; i++) {
        printf("%d ", arr3[i]);
    }
    return 0; */
    
/* //№12
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    
    Sort(arr, size);
    
    printf("Res: ");
    for (int i = 0; i < size; i++) {
        printf("%d ", arr[i]);
    }
    
    return 0; */
/*//№13 
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    int maxIndex = 0, minIndex = 0;
    for (int i = 1; i < size; i++) {
        if (arr[i] > arr[maxIndex]) {
            maxIndex = i;
        }
        if (arr[i] < arr[minIndex]) {
            minIndex = i;
        }
    }
    
    int start, end;
    if (maxIndex < minIndex) {
        start = maxIndex;
        end = minIndex;} else {
        start = minIndex;
        end = maxIndex;}
    
    int sum = 0;
    for (int i = start; i <= end; i++) {
        sum += arr[i];}
    
    printf("Res: %d", sum);
    return 0;*/
    
/*//№14
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    
    int m = size;
    int y = 0;
    
    for (int i = 0; i < size; i++) {
        if (arr[i] < 0) {
            m = i; 
            break; }}
    
    for (int i = 0; i <= m; i++) {
        int res = 1;
        for (int j = 0; j <= i; j++) {
            res *= arr[j];
        }
        y += res; 
    }
    
    printf("Res: %d", y);
    
    return 0;*/
/*//№15    
    int size;
    printf("Size: ");
    scanf("%d", &size);
    
    int arr[size];
    
    printf("Arr: ");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }
    
    int temp;
    for (int i = 0; i < 2; i++) {
    temp = arr[0];
  
    for (int j = 0; j < size - 1; j++) { arr[j] = arr[j + 1];}
  
    arr[size - 1] = temp;}
 
    printf("Res: ");
     for (int i = 0; i < size; i++) {
    printf("%d ", arr[i]);
    }
    
    return 0;
    */
}

